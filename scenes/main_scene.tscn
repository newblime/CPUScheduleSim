[gd_scene load_steps=7 format=2]

[ext_resource path="res://images/Blank1.png" type="Texture" id=1]
[ext_resource path="res://scenes/sched_data.tscn" type="PackedScene" id=2]
[ext_resource path="res://images/bound.png" type="Texture" id=3]

[sub_resource type="CSharpScript" id=1]
resource_name = "main_scene"
script/source = "using Godot;
using System;

public class main_scene : Control
{
    // Declare member variables here. Examples:
    // private int a = 2;
    // private string b = \"text\";

    // Called when the node enters the scene tree for the first time.
    public override void _Ready()
    {
        
    }

//  // Called every frame. 'delta' is the elapsed time since the previous frame.
//  public override void _Process(float delta)
//  {
//      
//  }
}
"

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;

uniform sampler2D bound;

uniform sampler2D pcol;
uniform sampler2D prange;
uniform int plen;
uniform float _time;
uniform float _ratio;
uniform int hduration;
uniform float _splitsize;

void fragment(){
	float _newuv;
	float _newtime;
	float brightness = 1.0f;
	
	if(UV.x > _ratio){
		_newuv = (UV.x-_ratio)/(1.0f-_ratio);
		_newtime = _newuv*float(hduration)+_time;
	}
	else{
		float f = UV.x/_ratio;
		_newuv = 1.0f-f;
		
		if((_ratio-UV.x) < _splitsize){
			COLOR = vec4(vec3(0).xyz, 1);
			return;
		}
		_newtime = _time-_newuv*float(hduration);
		brightness = f;
	}
	
	for(int i = 0; i < plen; i++){
		vec4 _range = texture(prange, vec2((float(i)+0.5)/float(plen), 0.5f));
		if(_range.r < _newtime && _range.g > _newtime){
			COLOR = vec4(texture(pcol, vec2((float(i)+0.5)/float(plen), 0.5f)).xyz, 1.0f);
			break;
		}
		else if(_range.r > _newtime)
			break;
	}
	
	float _dmp;
	vec4 tb = texture(bound, vec2(modf(_newtime, _dmp), UV.y));
	COLOR.xyz = COLOR.xyz * (tb.xyz * tb.w);
	COLOR.a = brightness;
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/plen = null
shader_param/_time = 0.0
shader_param/_ratio = 0.1
shader_param/hduration = 8
shader_param/_splitsize = 0.002
shader_param/bound = ExtResource( 3 )

[node name="Control" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}
max_schedule = 8
max_hduration = 10

[node name="1" type="Label" parent="."]
margin_right = 40.0
margin_bottom = 14.0
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="2" type="VBoxContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
custom_constants/separation = 20
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="1" type="HBoxContainer" parent="2"]
margin_top = 61.0
margin_right = 1024.0
margin_bottom = 81.0
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="1" type="Button" parent="2/1"]
margin_left = 419.0
margin_right = 481.0
margin_bottom = 20.0
text = "Tambah"

[node name="2" type="Button" parent="2/1"]
margin_left = 485.0
margin_right = 551.0
margin_bottom = 20.0
text = "Simulasi"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="3" type="Button" parent="2/1"]
margin_left = 555.0
margin_right = 605.0
margin_bottom = 20.0
text = "hapus"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Names" type="HBoxContainer" parent="2"]
margin_top = 101.0
margin_right = 1024.0
margin_bottom = 115.0
alignment = 1

[node name="Label" type="Label" parent="2/Names"]
margin_left = 6.0
margin_right = 256.0
margin_bottom = 14.0
rect_min_size = Vector2( 250, 0 )
text = "Process"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label2" type="Label" parent="2/Names"]
margin_left = 260.0
margin_right = 510.0
margin_bottom = 14.0
rect_min_size = Vector2( 250, 0 )
text = "Waktu"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label3" type="Label" parent="2/Names"]
margin_left = 514.0
margin_right = 764.0
margin_bottom = 14.0
rect_min_size = Vector2( 250, 0 )
text = "Kedatangan"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label4" type="Label" parent="2/Names"]
margin_left = 768.0
margin_right = 1018.0
margin_bottom = 14.0
rect_min_size = Vector2( 250, 0 )
text = "Prioritas"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="2" parent="2" instance=ExtResource( 2 )]
margin_top = 135.0
margin_right = 1024.0
margin_bottom = 385.0
scroll_horizontal_enabled = false

[node name="log_label" type="Label" parent="2"]
margin_top = 405.0
margin_right = 1024.0
margin_bottom = 419.0
text = "Test"

[node name="3" type="TextureRect" parent="2"]
material = SubResource( 3 )
margin_top = 439.0
margin_right = 1024.0
margin_bottom = 539.0
rect_min_size = Vector2( 0, 100 )
texture = ExtResource( 1 )
expand = true

[node name="Block" type="Control" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}
